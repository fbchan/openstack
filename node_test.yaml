heat_template_version: 2015-04-30

description: This template deploys standalone F5 VNF instance

parameters:
  ve_image:
    type: string
    label: F5 VNF Image
    description: The image to be used on the compute instance.
    constraints:
      - custom_constraint: glance.image 
  ve_flavor:
    type: string
    label: F5 VNF Flavor
    description: Type of instance (flavor) to be used for the VNF.
    default: m1.f5.xlarge
    constraints:
      - custom_constraint: nova.flavor
  use_config_drive:
    type: boolean
    label: Use Config Drive
    description: Use config drive to provider meta and user data.
    default: true 
  f5_ve_os_ssh_key:
    type: string
    label: F5 VNF Root SSH Key Name
    description: Name of key-pair to be installed on the FW instances.
    constraints:
      - custom_constraint: nova.keypair
  admin_password:
    type: string
    label: F5 VNF Admin User Password
    description: Password used to perform image import services
    hidden: true  
  root_password:
    type: string
    label: F5 VNF Root User Password
    description: Password used to perform image import services
    hidden: true
  vnf1_license:
    type: string
    label: VNF1 License Base Key
    description: F5 TMOS License Basekey
  mgmt_network:
    type: string
    label: VNF Management Network
    description: Management Interface Network.
    default: test
    constraints:
      - custom_constraint: neutron.network
  network_1:
    type: string
    label: VNF Network for the insideV6/trusted Interface
    description: TMM insideV6/trusted network.
    default: test
    constraints:
      - custom_constraint: neutron.network
  network_2:
    type: string
    label: VNF Network for the outsideV4/untrusted Interface
    description: TMM outsideV4/untrusted network.
    default: test
    constraints:
      - custom_constraint: neutron.network
  network_3:
    type: string
    label: VNF Network for the HA Interface
    description: TMM HA network.
    default: test
    constraints:
      - custom_constraint: neutron.network
  network_4:
    type: string
    label: VNF Network for the insideV4/trusted Interface
    description: TMM insideV4/trusted network.
    default: test
    constraints:
      - custom_constraint: neutron.network
  default_gateway:
    type: string
    label: Default Gateway IP
    default: 10.128.10.254
    description: Upstream Gateway IP Address for VNF instances
  config_virtio:
    type: boolean
    label: Configure VIRTIO
    description: Enable VIRTIO.
    default: true 
  iworkflow_name:
    type: string
    label: F5 iWorkFlow Name
    description: iWorkFlow Name
    default: iWorkFlow
  iworkflow_ip:
    type: string
    label: F5 iWorkFlow IP Address
    description: iWorkFlow IP Address
    default: 10.128.1.253  
  iwork_restadmin_password:
    type: string
    label: F5 iWorkflow restadmin password
    description: Password used to perform device enrollement onto iWorkflow
    hidden: true  
parameter_groups:
- parameters:
  - ve_image
  - ve_flavor
  - use_config_drive
- parameters:
  - f5_ve_os_ssh_key
  - admin_password
  - root_password
- parameters:
  - vnf1_license
- parameters:
  - mgmt_network
  - network_1
  - network_2
  - network_3
  - network_4
  - default_gateway
  - config_virtio
- parameters:
  - iworkflow_name
  - iworkflow_ip
  - iwork_restadmin_password

resources:
  bigip_permit_any_any_security_group:
    type: OS::Neutron::SecurityGroup
    properties:
      description: security group rules to allow any ingress and egress interfaces (IPv4 and IPv6)
      name: bigip_permit_any_any_security_group
      rules: [
      {"ethertype": IPv6,
      "remote_ip_prefix": "::/0", 
      "direction": ingress},
      {"ethertype": IPv4, 
      "remote_ip_prefix": "0.0.0/0", 
      "direction": ingress}
      ]
  vnf1_mgmt_port:
    type: OS::Neutron::Port
    properties:
      network: {get_param: mgmt_network}
      security_groups: [{ get_resource: bigip_permit_any_any_security_group}]
  vnf1_network_1_port:
    type: OS::Neutron::Port
    properties:
      network: {get_param: network_1 }
      security_groups: [{ get_resource: bigip_permit_any_any_security_group}]
  vnf1_network_2_port:
    type: OS::Neutron::Port
    properties:
      network: {get_param: network_2 }
      security_groups: [{ get_resource: bigip_permit_any_any_security_group}]
  vnf1_network_3_port:
    type: OS::Neutron::Port
    properties:
      network: {get_param: network_3 }
      security_groups: [{ get_resource: bigip_permit_any_any_security_group}]
  vnf1_network_4_port:
    type: OS::Neutron::Port
    properties:
      network: {get_param: network_4 }
      security_groups: [{ get_resource: bigip_permit_any_any_security_group}]

  vnf1_instance:
    type: OS::Nova::Server
    properties:
      image: { get_param: ve_image }
      flavor: { get_param: ve_flavor }
      key_name: { get_param: f5_ve_os_ssh_key }
      config_drive: { get_param: use_config_drive }
      networks:
        - port: {get_resource: vnf1_mgmt_port}
        - port: {get_resource: vnf1_network_1_port}
        - port: {get_resource: vnf1_network_2_port}
        - port: {get_resource: vnf1_network_3_port}
        - port: {get_resource: vnf1_network_4_port}
      user_data_format: RAW
      user_data:
        str_replace:
          params:
            __admin_password__: { get_param: admin_password }
            __root_password__: { get_param: root_password }
            __vnf1_license__: { get_param: vnf1_license }
            __default_gateway__: { get_param: default_gateway }
            __network_1__: { get_attr: [vnf1_network_1_port, fixed_ips, 0, ip_address] }
            __network_2__: { get_attr: [vnf1_network_2_port, fixed_ips, 0, ip_address] }
            __v6_netmask__: "ffff:ffff:ffff:ffff::"
            __network_3__: { get_attr: [vnf1_network_3_port, fixed_ips, 0, ip_address] }
            __network_4__: { get_attr: [vnf1_network_4_port, fixed_ips, 0, ip_address] }
            __config_virtio__: { get_param: config_virtio }
            __mgmt_ip__: { get_attr: [vnf1_mgmt_port, fixed_ips, 0, ip_address] }
            __iworkflow_ip__: {get_param: iworkflow_ip}
            __iwork_restadmin_password__: {get_param: iwork_restadmin_password}
          template: |
            {
               "bigip": {
                   "f5_ve_os_ssh_key_inject": "true",
                   "change_passwords": "true",
                   "admin_password": "__admin_password__",
                   "root_password": "__root_password__",
                   "license": {
                       "basekey": "__vnf1_license__",
                       "host": "None",
                       "port": "8080",
                       "proxyhost": "None",
                       "proxyport": "443",
                       "proxyscripturl": "None"
                   },
                   "modules": {
                       "auto_provision": "false",
                       "ltm": "none",
                       "afm": "nominal"
                   },
                   "fqdn_": "vnf1.telstra.com.au",
                   "dsc_name": "vnf1",
                   "ntp": "pool.ntp.org",
                   "timezone": "Australia/Melbourne",
                   "syslog": "192.168.102.254",
                   "dnssearch": "telstra.com.au telstra.com",
                   "dnsnameserver": "8.8.8.8 8.8.4.4",
                   "config_virtio" : "__config_virtio__",
                   "continue_on_system_cmd_failure" : "false",
                   "firstboot_cmds": [
                      "wait_mcp_running 20 10",
                      "wait_tmm_started 20 10",
                      "sleep 15",
                      "curl -k -X POST -u admin:__iwork_restadmin_password__ -H \"Cache-Control: no-cache\" -d '{\"address\":\"__mgmt_ip__\",\"userName\":\"admin\",\"password\":\"__admin_password__\",\"rootUser\":\"root\",\"automaticallyUpdateFramework\":true,\"properties\":{\"isRestProxyEnabled\":true,\"isSoapProxyEnabled\":true,\"isTmshProxyEnabled\":false,\"dmaConfigPathScope\":\"basic\"}}' \"https://__iworkflow_ip__/mgmt/shared/resolver/device-groups/cm-cloud-managed-devices/devices\""],
                   "network": {
                       "dhcp": "true",
                       "selfip_prefix": "selfip-",
                       "vlan_prefix": "network-",
                       "routes": [
                          {
                            "destination": "0.0.0.0/0.0.0.0",
                            "gateway": "__default_gateway__"
                          }
                       ],
                       "interfaces": {
                           "1.1": {
                               "dhcp": "false",
                               "address": "__network_1__",
                               "netmask": "__v6_netmask__",
                               "mtu": "1400",
                               "selfip_allow_service": "default",
                               "selfip_name": "selfip.insideV6",
                               "selfip_description": "Self IP address for BIG-IP insideV6/trusted network",
                               "vlan_name": "vlan.insideV6",
                               "vlan_description": "VLAN for BIG-IP insideV6/trusted network traffic",
                               "is_failover": "false",
                               "is_sync": "false",
                               "is_mirror_primary": "false",
                               "is_mirror_secondary": "false"
                           },
                           "1.2": {
                               "dhcp": "false",
                               "address": "__network_2__",
                               "netmask": "255.255.255.0",
                               "mtu": "1400",
                               "selfip_allow_service": "none",
                               "selfip_name": "selfip.outsideV4",
                               "selfip_description": "Self IP address for BIG-IP outsideV4/untrusted network",
                               "vlan_name": "vlan.outsideV4",
                               "vlan_description": "VLAN for BIG-IP outsideV4/untrusted network traffic",
                               "is_failover": "false",
                               "is_sync": "false",
                               "is_mirror_primary": "false",
                               "is_mirror_secondary": "false"
                           },
                           "1.3": {
                               "dhcp": "false",
                               "address": "__network_3__",
                               "netmask": "255.255.255.0",
                               "mtu": "1400",
                               "selfip_allow_service": "default",
                               "selfip_name": "selfip.HA",
                               "selfip_description": "Self IP address for HA network",
                               "vlan_name": "vlan.HA",
                               "vlan_description": "VLAN for BIG-IP HA network traffic",
                               "is_failover": "true",
                               "is_sync": "true",
                               "is_mirror_primary": "true",
                               "is_mirror_secondary": "false"
                           },
                           "1.4": {
                               "dhcp": "false",
                               "address": "__network_4__",
                               "netmask": "255.255.255.0",
                               "mtu": "1400",
                               "selfip_allow_service": "default",
                               "selfip_name": "selfip.insideV4",
                               "selfip_description": "Self IP address for BIG-IP insideV4/trusted network",
                               "vlan_name": "vlan.insideV4",
                               "vlan_description": "VLAN for BIG-IP insideV4/trusted network traffic",
                               "is_failover": "false",
                               "is_sync": "false",
                               "is_mirror_primary": "false",
                               "is_mirror_secondary": "false"
                           }
                       }
                   }
               }
            }

  cpu_alarm_high:
    type: OS::Ceilometer::Alarm
    properties:
      description: Monitor for CPU > 40% for 2 minute
      meter_name: cpu_util
      statistic: avg
      period: 120
      evaluation_periods: 1
      threshold: 40
      matching_metadata: {'metadata.user_metadata.stack': {get_param: "OS::stack_id"}}
      comparison_operator: gt
  cpu_alarm_low:
    type: OS::Ceilometer::Alarm
    properties:
      description: Monitor for average CPU < 20% for 2 minutes
      meter_name: cpu_util
      statistic: avg
      period: 120
      evaluation_periods: 1
      threshold: 20
      matching_metadata: {'metadata.user_metadata.stack': {get_param: "OS::stack_id"}}
      comparison_operator: lt

outputs:
  vnf1_instance_name:
    description: Name of the vnf1 instance
    value: { get_attr: [vnf1_instance, name] }
  vnf1_instance_id:
    description: ID of the vnf1 instance
    value: { get_resource: vnf1_instance }
  vnf1_mgmt_ip:
    description: The mgmt IP address of f5 vnf1 instance
    value: { get_attr: [vnf1_mgmt_port, fixed_ips, 0, ip_address] }
  vnf1_mgmt_mac:
    description: The mgmt MAC address of f5 vnf1 instance
    value: { get_attr: [vnf1_mgmt_port, mac_address] }
  vnf1_mgmt_port:
    description: The mgmt port id of f5 vnf1 instance
    value: { get_resource: vnf1_mgmt_port }
  vnf1_network_1_ip:
    description: The 1.1 Nonfloating SelfIP address of f5 vnf1 instance
    value: { get_attr: [vnf1_network_1_port, fixed_ips, 0, ip_address] }
  vnf1_network_1_mac:
    description: The 1.1 MAC address of f5 vnf1 instance
    value: { get_attr: [vnf1_network_1_port, mac_address] }
  vnf1_network_1_port:
    description: The 1.1 port id of f5 vnf1 instance
    value: { get_resource: vnf1_network_1_port }
  vnf1_network_2_ip:
    description: The 1.2 Nonfloating SelfIP address of f5 vnf1 instance
    value: { get_attr: [vnf1_network_2_port, fixed_ips, 0, ip_address] }
  vnf1_network_2_mac:
    description: The 1.2 MAC address of f5 vnf1 instance
    value: { get_attr: [vnf1_network_2_port, mac_address] }
  vnf1_network_2_port:
    description: The 1.2 port id of f5 vnf1 instance
    value: { get_resource: vnf1_network_2_port }
  vnf1_network_3_ip:
    description: The 1.3 Nonfloating SelfIP address of f51 vnf instance
    value: { get_attr: [vnf1_network_3_port, fixed_ips, 0, ip_address] }
  vnf1_network_3_mac:
    description: The 1.3 MAC address of f5 vnf1 instance
    value: { get_attr: [vnf1_network_3_port, mac_address] }
  vnf1_network_3_port:
    description: The 1.3 port id of f5 vnf1 instance
    value: { get_resource: vnf1_network_3_port }
  vnf1_network_4_ip:
    description: The 1.4 Nonfloating SelfIP address of f5 vnf1 instance
    value: { get_attr: [vnf1_network_4_port, fixed_ips, 0, ip_address] }
  vnf1_network_4_mac:
    description: The 1.4 MAC address of f5 vnf1 instance
    value: { get_attr: [vnf1_network_4_port, mac_address] }
  vnf1_network_4_port:
    description: The 1.4 port id of f5 vnf1 instance
    value: { get_resource: vnf1_network_4_port }
